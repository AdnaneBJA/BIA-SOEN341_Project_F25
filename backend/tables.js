async function createTables(client) {
    const query = `
  CREATE TABLE IF NOT EXISTS "Organizer" (
    "organizerID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "organizerUserName" VARCHAR(255) UNIQUE NOT NULL,
    "organizerPassword" VARCHAR(255) NOT NULL
  );

  CREATE TABLE IF NOT EXISTS "Student" (
    "studentID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "studentUserName" VARCHAR(255) UNIQUE NOT NULL,
    "studentPassword" VARCHAR(255) NOT NULL
  );

  CREATE TABLE IF NOT EXISTS "Admin" (
    "adminID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "adminUserName" VARCHAR(255) UNIQUE NOT NULL,
    "adminPassword" VARCHAR(255) NOT NULL
  );

  CREATE TABLE IF NOT EXISTS "Ticket" (
    "ticketID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "eventID" INTEGER NOT NULL,
    "studentID" INTEGER NOT NULL,
    "purchaseTime" TIMESTAMP NOT NULL,
    "valid" BOOLEAN DEFAULT TRUE
    );

  CREATE TABLE IF NOT EXISTS "Events" (
    "eventID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "eventName" VARCHAR(255) NOT NULL,
    "organizerID" INTEGER NOT NULL,
    "eventType" VARCHAR(100),
    "startTime" TIMESTAMP NOT NULL,
    "endTime" TIMESTAMP NOT NULL,
    "location" VARCHAR(255),
    "maxParticipants" INTEGER NOT NULL,
    "currentParticipants" INTEGER DEFAULT 0,
    "eventPrices" INTEGER NOT NULL,
    "eventDescription" VARCHAR(2000),
    "organizerUserName" VARCHAR(255) NOT NULL,
    "Organization" VARCHAR(255) NOT NULL,
    CONSTRAINT fk_events_organizer
      FOREIGN KEY ("organizerID") 
      REFERENCES "Organizer" ("organizerID"),
    CONSTRAINT fk_events_organizer_username
      FOREIGN KEY ("organizerUserName") 
      REFERENCES "Organizer" ("organizerUserName")

  );

  CREATE TABLE IF NOT EXISTS "Booking" (
    "bookingID" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "eventID" INTEGER NOT NULL,
    "studentID" INTEGER NOT NULL,
    "bookingTime" TIMESTAMP NOT NULL,
    "paymentStatus" VARCHAR(50),
    CONSTRAINT fk_booking_event
      FOREIGN KEY ("eventID") 
      REFERENCES "Events" ("eventID"),
    CONSTRAINT fk_booking_student
      FOREIGN KEY ("studentID") 
      REFERENCES "Student" ("studentID")
  );

  -- Migrations for legacy databases
  ALTER TABLE public."Ticket" ADD COLUMN IF NOT EXISTS "qrCode" VARCHAR(255) NOT NULL DEFAULT 'pending';

  DO $$ BEGIN
    IF NOT EXISTS (
      SELECT 1 FROM pg_constraint WHERE conname = 'unique_ticket_per_student_event'
    ) THEN
      ALTER TABLE public."Ticket" ADD CONSTRAINT unique_ticket_per_student_event UNIQUE ("eventID", "studentID");
    END IF;
  END $$;
  `;

    await client.query(query);
}

module.exports = createTables;
